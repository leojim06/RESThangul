"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = require("express");
var validate = require("express-validation");
var multer = require("multer");
// import * as multer from 'multer';
var jamoController = require("./jamo.controller");
var auth_service_1 = require("../../services/auth.service");
var jamo_validations_1 = require("./jamo.validations");
var routes = express_1.Router();
var upload = multer({ dest: 'audio/' });
routes.post('/', auth_service_1.authJwt, auth_service_1.authRole('Admin'), validate(jamo_validations_1.default.createJamo), jamoController.createJamo);
routes.get('/', jamoController.getJamos);
routes.get('/vocales', jamoController.getVocales);
routes.get('/consonantes', jamoController.getConsonantes);
routes.get('/grupos_consonanticos', jamoController.getGruposConsonanticos);
routes.get('/:id', jamoController.getJamoById);
routes.patch('/:id', auth_service_1.authJwt, auth_service_1.authRole('Admin'), validate(jamo_validations_1.default.updateJamo), jamoController.updateJamo);
routes.delete('/:id', auth_service_1.authJwt, auth_service_1.authRole('Admin'), jamoController.deletJamo);
routes.post('/:id/audio', upload.array('audio'), auth_service_1.authJwt, auth_service_1.authRole('Admin'), jamoController.addAudioToJamo);
routes.get('/:id/audio/:filename', jamoController.getAudioFromJamo);
routes.post('/:id/img', upload.single('img'), auth_service_1.authJwt, auth_service_1.authRole('Admin'), jamoController.addImgToJamo);
routes.get('/:id/img', jamoController.getImgFromJamo);
exports.default = routes;
